/*
 * Copyright 2025, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */


syntax = "proto3";

package spine.validation;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.validation";
option java_outer_classname = "RangeBadSyntaxProto";
option java_multiple_files = true;

// This file contains messages with the `(range)` option having an invalid syntax.

// Invalid delimiter.

message RangeInvalidDelimiter1 {
    int32 value = 1 [(range).value = "[-5 ... 10]"];
}

message RangeInvalidDelimiter2 {
    int32 value = 1 [(range).value = "[-5  ..  10]"];
}

message RangeInvalidDelimiter3 {
    int32 value = 1 [(range).value = "[-5, 10]"];
}

message RangeInvalidDelimiter4 {
    int32 value = 1 [(range).value = "[-5; 10]"];
}


// Invalid opening or closing symbol.

message RangeInvalidOpening {
    int32 value = 1 [(range).value = "{-5 .. 10]"];
}

message RangeInvalidClosing {
    int32 value = 1 [(range).value = "[-5 .. 10"];
}


// Invalid number type.

message RangeInvalidLowerFloat {
    float value = 1 [(range).value = "[0 .. 15.0]"];
}

message RangeInvalidUpperFloat {
    float value = 1 [(range).value = "[0.0 .. 15]"];
}

message RangeInvalidLowerDouble {
    double value = 1 [(range).value = "[0 .. 15.0]"];
}

message RangeInvalidUpperDouble {
    double value = 1 [(range).value = "[0.0 .. 15]"];
}

message RangeInvalidLowerInt {
    int32 value = 1 [(range).value = "[0.0 .. 15]"];
}

message RangeInvalidUpperInt {
    int32 value = 1 [(range).value = "[0 .. 15.0]"];
}

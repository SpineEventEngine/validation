/*
 * Copyright 2025, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.validation;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.validation";
option java_outer_classname = "RangeOptionSpecProto";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "spine/base/error.proto";

// Provides a `(range)` field that specifies a custom error message using
// the placeholders not supported by the option.
message RangeWithInvalidPlaceholders {
    int32 value = 1 [
        (range).value = "[1 .. 10]",
        (range).error_msg = "The `${field.name}` does not belong to the `${range}` range."
    ];
}

// Provides a `(range)` field that specifies a non-existing field for the upper bound.
message RangeWithNonExistingFieldBound {

    int32 value = 1 [(range).value = "[0 .. timestamp.minutes]"];

    google.protobuf.Timestamp timestamp = 2;
}

// Provides a `(range)` field that specifies a non-numeric field for the lower bound.
message RangeWithNonNumericFieldBound {

    int32 value = 1 [(range).value = "(error.type .. 10)"];

   spine.base.Error error = 2;
}

// Provides a `(range)` field that specifies itself for the lower bound.
message RangeWithSelfReferencing {
    int32 value = 1 [(range).value = "[value .. 100]"];
}

// Provides a `(range)` field that specifies a repeated field for the lower bound.
message RangeWithRepeatedFieldBound {

    int32 value = 1 [(range).value = "(error_code .. 10)"];

    repeated int32 error_code = 2;
}

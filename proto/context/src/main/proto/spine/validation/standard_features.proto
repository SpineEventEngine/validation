/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.validation;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.validation";
option java_outer_classname = "StandardFeaturesProto";
option java_multiple_files = true;

import "spine/protodata/ast.proto";
import "spine/time_options.proto";

// The associated message field must be validated. If violations are found, the containing message
// itself is invalid.
//
// If the field is a list, all the elements must be valid.
//
// If the field is a map, all the values of the map must be valid.
//
message RecursiveValidation {
}

// The associated `oneof` group must be set, i.e. one of the fields in the group must be present.
//
// Generated code must check the `oneof` case in order to avoid comparisons to default values for
// types which do not support the `required` constraint, such as numerical types.
//
message RequiredOneof {

    protodata.OneofName name = 1;
}

// The associated temporal message must be either in the past or in the future from
// the current time.
//
message InTime {

    Time time = 1;
}
